╔══════════════════════════════════════════════════════════════════════════════╗
║                Welcome to Francinette, a 42 tester framework!                ║
╚═══════════════════════╦══════════════════════════════╦═══════════════════════╝
                        ║             libft            ║
                        ╚══════════════════════════════╝
✔ Preparing framework
✖ Executing: norminette
ft_atoi.c: OK!
ft_bzero.c: OK!
ft_calloc.c: OK!
ft_isalnum.c: OK!
ft_isalpha.c: OK!
ft_isascii.c: OK!
ft_isdigit.c: OK!
ft_isprint.c: OK!
ft_isspace.c: OK!
ft_itoa.c: OK!
ft_lstadd_back.c: OK!
ft_lstadd_front.c: OK!
ft_lstclear.c: OK!
ft_lstdelone.c: OK!
ft_lstiter.c: OK!
ft_lstlast.c: OK!
ft_lstmap.c: OK!
ft_lstnew.c: OK!
ft_lstsize.c: Error!
Error: WRONG_SCOPE_COMMENT  (line:  25, col:   5):	Comment is invalid in this scope
ft_memchr.c: OK!
ft_memcmp.c: OK!
ft_memcpy.c: OK!
ft_memmove.c: OK!
ft_memset.c: OK!
ft_putchar_fd.c: OK!
ft_putendl_fd.c: OK!
ft_putnbr_fd.c: OK!
ft_putstr_fd.c: OK!
ft_split.c: OK!
ft_strchr.c: OK!
ft_strdup.c: OK!
ft_striteri.c: OK!
ft_strjoin.c: OK!
ft_strlcat.c: OK!
ft_strlcpy.c: OK!
ft_strlen.c: OK!
ft_strmapi.c: OK!
ft_strncmp.c: OK!
ft_strnstr.c: OK!
ft_strrchr.c: OK!
ft_strrev.c: OK!
ft_strtrim.c: OK!
ft_substr.c: OK!
ft_tolower.c: OK!
ft_toupper.c: OK!
libft.h: OK!
✔ Executing: make fclean bonus
ℹ Executing: libft-war-machine (https://github.com/y3ll0w42/libft-war-machine)
FUNCTION TESTS RESULT
ft_lstlast T KO
Abort : A Bus error : B Segmentation fault : S Timeout : T
More information in: /Users/fsoares-/fraaaaa/temp/libft/war-machine/deepthought
Errors in lstlast: /Users/fsoares-/fraaaaa/temp/libft/war-machine/tests/Bonus_functions/ft_lstlast
Test 1:
    elem->next = elem2;
    elem2->next = elem3;
    elem3->next = elem4;
    val = ft_lstlast(elem);
    i = 0;
    content = val->content;
    while (content[i])
        write(1, &(content[i++]), 1);
    write(1, "\n", 1);
    elem->next = NULL;
    val = ft_lstlast(elem);
    content = val->content;
    i = 0;
    while (content[i])
        write(1, &(content[i++]), 1);
    write(1, "\n", 1);
    elem = NULL;
    val = ft_lstlast(elem);
    if (val == NULL)
        write(1, "NULL", 4);
    write(1, "\n", 1);
Expected (cat -e test01.output):
sit$
lorem$
NULL$
Your result (cat -e user_output_test01):
✔ Compiling tests: libftTester (https://github.com/Tripouille/libftTester)
ℹ Testing:
ft_lstlast	: 1.TIMEOUT
Errors in:
For /Users/fsoares-/fraaaaa/tests/libft/Tripouille/tests/ft_lstlast_test.cpp:
TIMEOUT 21: 	/* 1 */ check(ft_lstlast(l) == 0);
✔ Compiling tests: libft-unit-test (https://github.com/alelievr/libft-unit-test)
ℹ Testing:
ft_lstlast      : [TIMEOUT] [TIMEOUT]
[timeout]: see the log file for informations
[timeout]: see the log file for informations
	t_list *l;
 	t_list *expected;
 	t_list *actual;

 	l = lstnew(strdup("1"));
 	l->next = lstnew(strdup("2"));
 	l->next->next = lstnew(strdup("3"));
 	expected = l->next->next;
 	actual = ft_lstlast(l);
 	if (actual == expected)
 		exit(TEST_SUCCESS);
 	exit(TEST_FAILED);

 Test code:
 	t_list *l = ((void *)0);
 	t_list *expected;
 	t_list *actual;

 	expected = ((void *)0);
 	actual = ft_lstlast(l);
 	if (actual == expected)
 		exit(TEST_SUCCESS);
 	exit(TEST_FAILED);


✔ Compiling tests: fsoares (my own)
ℹ Testing:
ft_lstlast      : 1.KO Timeout
Errors found:
For ft_lstlast, in /Users/fsoares-/fraaaaa/tests/libft/fsoares/test_lstlast.c:
Error in test 1: ft_lstlast(<list: (null)>): Timeout occurred. You can increase the timeout by executing francinette --timeout <number of seconds>=====> File /Users/fsoares-/fraaaaa/temp/libft/war-machine/errors.log contents:
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/c++/4.2.1
/Users/fsoares-/fraaaaa/temp/libft/war-machine/srcs/diff_test.sh: line 16: 28864 Alarm clock: 14         "${PATH_TEST}"/user_exe $k > "${PATH_TEST}"/tests/$(echo ${part}tions)/$(echo $1 | cut -d . -f 1 | sed 's/_bonus//g')/user_output_test${text}$k
=====> File /Users/fsoares-/fraaaaa/temp/libft/alelievr/result.log contents:
ft_lstlast:    [TIMEOUT] [TIMEOUT] Test code:
	t_list *l;
	t_list *expected;
	t_list *actual;
	l = lstnew(strdup("1"));
	l->next = lstnew(strdup("2"));
	l->next->next = lstnew(strdup("3"));
	expected = l->next->next;
	actual = ft_lstlast(l);
	if (actual == expected)
		exit(TEST_SUCCESS);
	exit(TEST_FAILED);
Test code:
	t_list *l = ((void *)0);
	t_list *expected;
	t_list *actual;
	expected = ((void *)0);
	actual = ft_lstlast(l);
	if (actual == expected)
		exit(TEST_SUCCESS);
	exit(TEST_FAILED);